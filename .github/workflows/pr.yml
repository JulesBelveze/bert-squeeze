name: CI
on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: ${{ matrix.python-version }}
          cache: true # enable caching

      - name: Install dev dependencies
        run: uv sync --extra dev

      - name: Check formatting
        run: uv run task check-formatting

      - name: Run lint
        run: uv run task lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: ${{ matrix.python-version }}
          cache: true # enable caching

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests
        run: uv run task test

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v1
        with:
          python-version: "3.11"
          cache: true

      - name: Export requirements
        run: uv export --all-extras --no-hashes > requirements.txt

      - name: Run pip-audit
        run: uvx pip-audit -r requirements.txt
        # You can initially allow failures to avoid blocking PRs
        continue-on-error: true
